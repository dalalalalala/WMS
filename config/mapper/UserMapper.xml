<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.neu.wms.dao.UserMapper">

   
 <resultMap type="user" id="baseResultMap">
 
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="loginName" property="loginName" />
    <result column="password" property="password" />
    <result column="status" property="status" />
    <result column="header" property="header" />
 
     <association property="dept" columnPrefix="d_" javaType="dept">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>
     </association>
 </resultMap>

  <select id="login" resultType="user">
     select *from user where loginName = #{loginName} and password = #{password}
  </select>
  
  <select id="findById" resultMap="baseResultMap" parameterType="int">
       select u.*,d.id d_id,d.name d_name from user u,dept d where u.deptId = d.id and u.id = #{id}
  </select>
   
  <select id="findByQuery" resultMap="baseResultMap"  parameterType="userQuery">
     select u.*,d.id d_id,d.name d_name from user u,dept d 
     
     <where>
        u.deptId =d.id 
        <if test="name != null">
        and u.name = #{name}
        </if>
        <if test="loginName != null">
        and u.loginName = #{loginName}
        </if>
     </where>
     <!-- 是否要分页,如果需要分页那么需要添加limit关键字 -->
     limit #{offset},#{pageSize}
  </select>
 
 
  <!-- 查找当前条件下的总的记录数 --> 	
  <select id="findCount" resultType="long" parameterType="userQuery">
     select count(*) from user 
     <where>
        <if test="name != null">
        and name = #{name}
        </if>
        <if test="loginName != null">
        and loginName = #{loginName}
        </if>
     </where>
  </select>
  
  <!-- 添加 -->
<insert id="add" parameterType="user">
    insert into user
    <!-- prefix:代表替换prefixOverrides指定的字符串,如果prefixOverrides没有值,相当于在最前前添加的意思 -->
    <!-- suffix:代表替换suffixOverrides指定的字符串,如果suffixOverrides没有值,相当于在最后添加的意思 -->
    <trim prefix="(" suffix=")"  suffixOverrides=",">
        name,
        loginName,
        password,
        status,
        header,
        deptId,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        #{name},
        #{loginName},
        #{password},
        #{status},
        #{header},
        #{dept.id},
    </trim>
  </insert>
  
<!--   int [] id -->
  <delete id="delete">
<!--     delete from user where id in (1,2,3) -->

delete from user where id in
<!-- foreach:遍历  collection遍历什么类型的集合,array代表数据,item代表的是遍历到的元素存放到哪里  -->
<foreach collection="array" open="(" close=")" separator="," item="item">
  #{item}
</foreach>
  </delete>
  
  <!-- 根据Id更新 -->
  <update id="update" parameterType="user">
    update user
    <set>
      <if test="name != null">
        name = #{name},
      </if>
      <if test="loginName != null">
        loginName = #{loginName},
      </if>
      <if test="password != null">
        password = #{password},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
      <if test="header != null">
        header = #{header},
      </if>
      <if test="dept != null">
        deptId = #{dept.id},
      </if>
    </set>
    where id = #{id}
  </update>
  
  
  <delete id="unbind" parameterType="int">
      delete from middle_user_role where userId = #{userId}
  </delete>
  
  <insert id="bind">
     insert into middle_user_role (userId,roleId) values(#{userId},#{roleId})
  </insert>
   
	 
  
  
</mapper>